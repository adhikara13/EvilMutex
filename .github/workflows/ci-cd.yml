name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate-yaml:
    name: Validate YAML Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'website/package-lock.json'

      - name: Install dependencies
        run: |
          cd website
          npm ci

      - name: Install YAML validator
        run: npm install -g yaml-lint

      - name: Validate YAML files
        run: |
          echo "Validating YAML files..."
          find signatures/ -name "*.yml" -o -name "*.yaml" | while read file; do
            echo "Validating: $file"
            yaml-lint "$file" || exit 1
          done
          echo "All YAML files are valid!"

      - name: Test build process
        run: |
          echo "Testing integrated build process..."
          cd website
          npm run generate
          echo "Build process completed successfully!"

  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: validate-yaml
    # Only run on push to main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'website/package-lock.json'

      - name: Install dependencies
        run: |
          cd website
          npm ci

      - name: Build Nuxt.js application with integrated data
        run: |
          echo "Building Nuxt.js application with integrated data processing..."
          cd website
          npm run generate

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy .output/public --project-name=${{ vars.CLOUDFLARE_PROJECT_NAME }}
          workingDirectory: website

  notify:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [validate-yaml, deploy]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## EvilMutex CI/CD Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### YAML Validation: ${{ needs.validate-yaml.result }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "### Deployment: ${{ needs.deploy.result }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Deployment: Skipped (PR only)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Event: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "Branch: ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY 